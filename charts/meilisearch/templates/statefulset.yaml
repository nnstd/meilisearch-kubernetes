apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "meilisearch.fullname" . }}
  labels:
    {{- include "meilisearch.labels" . | nindent 4 }}
spec:
  replicas: {{ if .Values.sharding.enabled }}{{ .Values.sharding.replicaCount }}{{ else }}{{ .Values.replicaCount | default 1 }}{{ end }}
  serviceName: {{ if .Values.sharding.enabled }}{{ template "meilisearch.fullname" . }}-headless{{ else }}{{ template "meilisearch.fullname" . }}{{ end }}
  selector:
    matchLabels:
      {{- include "meilisearch.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "meilisearch.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ (include (printf "%s/configmap.yaml" $.Template.BasePath) .) | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name | default (include "meilisearch.fullname" .) }}
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      {{- end }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        {{- if .Values.persistence.enabled }}
        {{- if not .Values.sharding.enabled }}
        - name: {{ .Values.persistence.volume.name }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ include "meilisearch.fullname" . }}{{- end }}
        {{- end }}
        {{- else }}
        - name: {{ .Values.persistence.volume.name }}
          emptyDir: {}
        {{- end }}
        {{- if .Values.sharding.enabled }}
        - name: network-config
          configMap:
            name: {{ include "meilisearch.fullname" . }}-network-config
            defaultMode: 0755
        {{- end }}
        {{- if .Values.volumes }}
{{ toYaml .Values.volumes | indent 8 }}
        {{- end }}

      initContainers:
      {{- if .Values.initContainers }}
        {{ toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
            
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}{{- if .Values.image.digest }}@{{ .Values.image.digest }}{{- else }}:{{ .Values.image.tag }}{{- end }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
{{ toYaml .Values.securityContext | indent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: {{ .Values.persistence.volume.name }}
              mountPath: {{ .Values.persistence.volume.mountPath }}
            {{- if .Values.volumeMounts }}
{{ toYaml .Values.volumeMounts | indent 12 }}
            {{- end }}
          envFrom:
          - configMapRef:
              name: {{ template "meilisearch.fullname" . }}-environment
          {{- if or (eq (include "isProductionWithoutMasterKey" .) "true") .Values.auth.existingMasterKeySecret }}
          - secretRef:
              name: {{ template "secretMasterKeyName" . }}
          {{- end }}
          {{- if .Values.envFrom }}
{{ toYaml .Values.envFrom | indent 10 }}
          {{- end }}
          {{- if ne (len .Values.command) 0 }}
          command:
{{ toYaml .Values.command | indent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.container.containerPort }}
              protocol: TCP
          startupProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            initialDelaySeconds: {{ .Values.startupProbe.InitialDelaySeconds }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            initialDelaySeconds: {{ .Values.livenessProbe.InitialDelaySeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            initialDelaySeconds: {{ .Values.readinessProbe.InitialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- if .Values.sharding.enabled }}
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    # Wait a bit for Meilisearch to fully initialize
                    sleep 5
          {{- end }}
      {{- if .Values.sharding.enabled }}
        - name: network-configurator
          image: curlimages/curl:latest
          command:
            - /bin/sh
            - -c
            - |
              # Wait for main container to be ready
              sleep 10
              # Run the network configuration script
              /scripts/configure-network.sh
              # Keep the container running
              echo "Network configuration completed. Sleeping..."
              sleep infinity
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MEILI_MASTER_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "secretMasterKeyName" . }}
                  key: MEILI_MASTER_KEY
            - name: SEARCH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.sharding.network.auth.existingSecret }}{{ .Values.sharding.network.auth.existingSecret }}{{ else }}{{ include "meilisearch.fullname" . }}-sharding-keys{{ end }}
                  key: {{ if .Values.sharding.network.auth.existingSecretSearchApiKey }}{{ .Values.sharding.network.auth.existingSecretSearchApiKey }}{{ else }}searchApiKey{{ end }}
            - name: WRITE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.sharding.network.auth.existingSecret }}{{ .Values.sharding.network.auth.existingSecret }}{{ else }}{{ include "meilisearch.fullname" . }}-sharding-keys{{ end }}
                  key: {{ if .Values.sharding.network.auth.existingSecretWriteApiKey }}{{ .Values.sharding.network.auth.existingSecretWriteApiKey }}{{ else }}writeApiKey{{ end }}
          volumeMounts:
            - name: network-config
              mountPath: /scripts
          securityContext:
            runAsNonRoot: true
            runAsUser: 100
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
      {{- end }}
      {{- if .Values.containers }}
        {{ toYaml .Values.containers | nindent 8 }}
      {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
  {{- if and .Values.sharding.enabled .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.persistence.volume.name }}
        {{- with .Values.persistence.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
  {{- end }}
